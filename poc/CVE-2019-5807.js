function main() {
    const v3 = [1000000.0, 1000000.0, 1000000.0];
    function v4(v5, v6) {
        let v13 = undefined;
        const v16 = [1337, 1337, -765470.5051836492];
        let v19 = 0;
        do {
            const v20 = v19 + 1;
            const v22 = Math.fround(v20);
            v19 = v22;
            const v23 = [v20, v22, 13.37];
            function v24(v25, v26, v27, v28, v29) {
                const v30 = 1337 <= v6;
                let v31 = v20;
                v31 = v22;
            }
            const v33 = v16.indexOf(v19);
            for (let v37 = 0; v37 < 100; v37++) {
            }
        } while (v19 < 6);
        function v39(v40, v41) {
            const v42 = { get: v39 };
        }
        const v43 = v39(4);
    }
    const v44 = v3.find(v4);
    const v47 = { SQRT2: "number", getInt16: 1337 };
    const v49 = [-25679.22469149914, -25679.22469149914];
    const v50 = v49.__proto__;
    const v52 = v50.push(8);
    const v53 = v4(v47);
}
    %NeverOptimizeFunction(main);
main();