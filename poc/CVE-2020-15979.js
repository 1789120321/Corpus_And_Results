function main() {
    function v1(v2, v3) {
        const v4 = Reflect;
        const v8 = [11.11, 11.11, 11.11];
        const v10 = { __proto__: 1111, a: -1, c: RegExp, constructor: v8, d: 1111, toString: -1 };
        const v12 = [11.11, 11.11, 11.11];
        function v13(v14, v15) { }
        const v16 = { apply: v13, call: v13, construct: v13, deleteProperty: v13, getOwnPropertyDescriptor: v13, getPrototypeOf: v13, has: v13, isExtensible: v13, set: v13, setPrototypeOf: v13 };
    }
    function v19(v20, v21) {
        let v22 = Number;
        v22 = v1;
        const v23 = +0;
        if (v23) {
            void (v22 = Number);
        } else {
            function v24(v25, v26) {
                const v28 = ".Cactus"[0];
                for (let v32 = 0; v32 < 7; v32++) { }
            }
            void (new Promise(v24));
            const v36 = [1337, 1337, 1337];
            try {
                for (const v37 of v36) {
                    const v38 = cactus;
                    const v56 = [v50, 13.37];
                    const v58 = [cactus, cactus, [] = cactus] = v117;
                }
            } catch (v119) {
            }
        }
        const v120 = v22(0);
    }
    for (let v124 = 0; v124 < 100; v124++) {
        const v125 = v19();
    }
}
main();