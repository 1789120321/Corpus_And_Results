/*
Source: 
*/
var wasmBinary = new Uint8Array([
	0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x04, 0x01, 0x60, 0x00, 0x00, 0x02, 0x0f,
	0x01, 0x03, 0x65, 0x6e, 0x76, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x02, 0x00, 0x01, 0x03,
	0x02, 0x01, 0x00, 0x07, 0x08, 0x01, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x0a, 0x80, 0x02,
	0x01, 0xfd, 0x01, 0x02, 0x02, 0x7d, 0x05, 0x7b, 0x43, 0x00, 0x00, 0x80, 0x3f, 0xfd, 0x12, 0x22,
	0x02, 0x43, 0x00, 0x00, 0x80, 0x3f, 0xfd, 0x14, 0x02, 0xfd, 0x13, 0x00, 0xfd, 0x12, 0x41, 0x88,
	0x08, 0xb2, 0x41, 0xac, 0x08, 0xb2, 0x94, 0xfd, 0x14, 0x02, 0x20, 0x03, 0xfd, 0x03, 0x00, 0x01,
	0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x10, 0x11, 0x12, 0x13, 0x43, 0x00,
	0x00, 0x80, 0x3f, 0xfd, 0x12, 0x43, 0x00, 0x00, 0x80, 0x3f, 0xfd, 0x14, 0x01, 0x43, 0x00, 0x00,
	0x80, 0x3f, 0xfd, 0x12, 0x43, 0x00, 0x00, 0x80, 0x3f, 0xfd, 0x14, 0x02, 0x43, 0x00, 0x00, 0x80,
	0x3f, 0xfd, 0x12, 0x43, 0x00, 0x00, 0x80, 0x3f, 0xfd, 0x14, 0x01, 0x43, 0x00, 0x00, 0x80, 0x3f,
	0xfd, 0x14, 0x02, 0x20, 0x01, 0xfd, 0x14, 0x03, 0xfd, 0x9c, 0x01, 0xfd, 0x9a, 0x01, 0xfd, 0x9a,
	0x01, 0x21, 0x05, 0x41, 0xac, 0x08, 0x20, 0x02, 0x43, 0x00, 0x00, 0x80, 0x3f, 0xfd, 0x14, 0x03,
	0x20, 0x03, 0x20, 0x02, 0xfd, 0x03, 0x04, 0x05, 0x06, 0x07, 0x1c, 0x1d, 0x1e, 0x1f, 0x08, 0x09,
	0x0a, 0x0b, 0x18, 0x19, 0x1a, 0x1b, 0xfd, 0x9c, 0x01, 0x20, 0x03, 0x41, 0x00, 0xfd, 0x0c, 0xfd,
	0x9c, 0x01, 0xfd, 0x9a, 0x01, 0x20, 0x02, 0x43, 0x00, 0x00, 0x00, 0x00, 0xfd, 0x14, 0x02, 0x20,
	0x02, 0xfd, 0x9c, 0x01, 0x20, 0x06, 0x20, 0x04, 0xfd, 0x03, 0x0c, 0x0d, 0x0e, 0x0f, 0x14, 0x15,
	0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20, 0x03, 0x43, 0x00, 0x00, 0x80,
	0x3f, 0xfd, 0x14, 0x01, 0xfd, 0x9c, 0x01, 0xfd, 0x9a, 0x01, 0xfd, 0x9b, 0x01, 0xfd, 0x01, 0x02,
	0x00, 0x41, 0x8c, 0x08, 0x20, 0x05, 0x20, 0x06, 0xfd, 0x9c, 0x01, 0xfd, 0x01, 0x02, 0x00, 0x0b,
]);

var wasmMemory = new WebAssembly.Memory({
	'initial': 1,
});

var wasmImports = {
	'env': {
		'memory': wasmMemory,
	},
};

WebAssembly.compile(wasmBinary).then(function (wasmModule) {
	return WebAssembly.instantiate(wasmModule, wasmImports);
}).then(function (wasmInstance) {
	var foobar = 0;
	wasmInstance.exports.main();
});